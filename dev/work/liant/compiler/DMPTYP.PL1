/* C++ dmptyp.pl1 - Dump a TYP_NODE list to the standard output */

/***********************************************************************
 * This product is the property of Language Processors, Inc. and is    *
 * licensed pursuant to a written license agreement.  No portion of    *
 * this product may be reproduced without the written permission of    *
 * Language Processors, Inc. except pursuant to the license agreement. *
 ***********************************************************************/

/***********************************************************************
 *
 *  LPI EDIT HISTORY
 *
 *  10.04.89  DGM  000  Original.
 *
 ***********************************************************************/

/* ---------------------------------------------------------------------
/* DMPTYP - Dump a TYPE_NODE list
/* ------------------------------------------------------------------- */

DMPTYP: procedure (TYPE_NODE_LIST);

	%include 'incfil';
	%include GLOBAL_IN;
	%include C_STANDARD_DEFS_IN;
	%include C_SYMBOL_TABLE_IN;
	%include C_TYPE_MAP_IN;

	declare
		TYPE_NODE_LIST	fixed binary (15);
	declare
		(TN, NEXT_TN)	fixed binary (15),
		S		character (256) varying;
	declare
		TYPSTR		entry (fixed binary (15), character (*) varying)
				returns (character (256) varying)
				external,
		FINDR		entry (fixed binary (15))
				external;

	do TN = TYPE_NODE_LIST repeat (NEXT_TN) while (TN > 0);
		call FINDR (TN);
		NEXT_TN = TYPE_NODE.NEXT;
		S = TYPSTR (TN, '');
		call OUTPUT_STRING_RETURN (S);
	end;

	put skip;
	return;

	/* -------------------------------------------------------------
	/* OUTPUT_STRING
	/* ----------------------------------------------------------- */

	OUTPUT_STRING: procedure (S);

		declare S character (*) varying;

		put list (S);

	end OUTPUT_STRING;

	/* -------------------------------------------------------------
	/* OUTPUT_RETURN
	/* ----------------------------------------------------------- */

	OUTPUT_RETURN: procedure;

		put skip;

	end OUTPUT_RETURN;

	/* -------------------------------------------------------------
	/* OUTPUT_STRING_RETURN
	/* ----------------------------------------------------------- */

	OUTPUT_STRING_RETURN: procedure (S);

		declare S character (*) varying;

		put list (S);
		put skip;

	end OUTPUT_STRING_RETURN;

end DMPTYP;

