/* C++ cxvalu.pl1 - */

/***********************************************************************
 * This product is the property of Language Processors, Inc. and is    *
 * licensed pursuant to a written license agreement.  No portion of    *
 * this product may be reproduced without the written permission of    *
 * Language Processors, Inc. except pursuant to the license agreement. *
 ***********************************************************************/

/***********************************************************************
 *
 *  LPI EDIT HISTORY               [ Update the VERSION__ string below ]
 *
 *  09.14.90  DGM  003  Changed include file names and VOP names.
 *  06.06.90  DGM  002  Updated for the new utilities.
 *  01.30.90  TLF  000  Original.  This is a set of runtimes that are
 *		        called by the C++ compiler to manipulate the
 *                      values used by expression parsing.  In this,
 *                      the proto-type implementation, they simply 
 *                      call the UTIL value-manipulation routines.
 *                      Eventually, these interface routines will be
 *                      replaced by routines that are written specifically
 *                      for C++.  (The UTIL versions limit the number of
 *                      values in use at any one time to approximately
 *                      1200.  C++ needs more than that.)
 *
 ***********************************************************************/

/* ---------------------------------------------------------------------
/* Version and copyright stamp
/* ------------------------------------------------------------------- */

declare	VERSION__	character (80) varying static internal initial

('@(#)CXXVALU  003  9/14/90  (c) 1990 Language Processors, Inc.');

/* ---------------------------------------------------------------------
/* Include files
/* ------------------------------------------------------------------- */

%include 'incfil';
%include GLOBAL_IN;
%include CXX_UTL_DEFS_IN;
%include CXX_UTL_VALUE_NODE_PKG;
%include CXX_STANDARD_DEFS_IN;
%include CXX_EXTERNAL_NAME_MAP_IN;
%include CXX_SYMBOL_TABLE_IN;
%include CXX_VALUE_NODE_IN;
%include CXX_PROCESS_EXPRESSION_IN;

/* ---------------------------------------------------------------------
/* GET_CPLUS_VAL
/* ------------------------------------------------------------------- */

GET_CPLUS_VAL: procedure (VOP, LEFT, RIGHT)
	       returns   (type (VID_T))
	       external  (X_GET_CPLUS_VAL);

	declare (VOP, LEFT, RIGHT) type (SHORT_T);

	return (GETV (VOP, LEFT, RIGHT));

end GET_CPLUS_VAL;

/* ---------------------------------------------------------------------
/* FIND_CPLUS_VAL
/* ------------------------------------------------------------------- */

FIND_CPLUS_VAL: procedure (VALUE_ID)
	        external  (X_FIND_CPLUS_VAL);

	declare VALUE_ID type (VID_T);

	call FINDV (VALUE_ID);

end FIND_CPLUS_VAL;

/* ---------------------------------------------------------------------
/* FREE_CPLUS_VAL
/* ------------------------------------------------------------------- */

FREE_CPLUS_VAL: procedure (VALUE_ID)
	        external  (X_FREE_CPLUS_VAL);

	declare VALUE_ID type (VID_T);

	call FREEV (VALUE_ID);

end FREE_CPLUS_VAL;

/* ---------------------------------------------------------------------
/* RELEASE_CPLUS_VALUES
/* ------------------------------------------------------------------- */

RELEASE_CPLUS_VALUES: procedure external  (X_RELEASE_CPLUS_VALUES);


	call RLSVS ();

end RELEASE_CPLUS_VALUES;

